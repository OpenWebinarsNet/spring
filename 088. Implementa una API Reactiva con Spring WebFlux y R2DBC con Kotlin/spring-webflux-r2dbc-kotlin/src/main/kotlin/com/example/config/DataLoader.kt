package com.example.config

import com.example.domain.Book
import com.example.repository.BookRepository
import org.springframework.boot.ApplicationRunner
import org.springframework.context.annotation.Bean
import org.springframework.r2dbc.core.DatabaseClient
import org.springframework.stereotype.Component
import reactor.core.publisher.Flux
import java.util.stream.Stream

@Component
class DataLoader {

    @Bean
    fun runner(repo: BookRepository, db: DatabaseClient) = ApplicationRunner {

        val initDB = db.sql {
            """
                DROP TABLE IF EXISTS books;
                CREATE TABLE IF NOT EXISTS books
                (
                    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                    title    VARCHAR(255),
                    author    VARCHAR(255),
                    CONSTRAINT pk_book PRIMARY KEY (id)
                );
            """
        }

        val books = Stream.of(
            Book(null, "book1", "author1"),
            Book(null, "book2", "author2"),
            Book(null, "book3", "author3"),
        )

        val saveAll = repo.saveAll(Flux.fromStream(books));

        initDB.then().thenMany(saveAll).subscribe()

    }
}